RS：Record Separator，记录分隔符 默认回车(\n),RS为空时，即RS=""   awk会自动以多行作为分隔符，即\n\n....
ORS：Output Record Separate，输出当前记录分隔符(\n)
FS：Field Separator，字段分隔符 (默认空格) ,当FS为空的时候，awk会把一行中的每个字符，当成一列来处理。
OFS：Out of Field Separator，输出字段分隔符( 空格)
NF: 字段总数  awk '{if ( NF > 2 ) {print $1 " " $2 ":" $3}}' file
NR: 当前行数  awk '{if(NR>10)print "OK,now for the real information!"}' file
RT：指定的那个分隔符  echo "111 222|333 444|555 666" |awk 'BEGIN{RS="|"}{print $0,RT}'
$n 当前记录的第n个字段，比如n为1表示第一个字段，n为2表示第二个字段。 
$0 这个变量包含执行过程中当前行的文本内容。 
[N] ARGC 命令行参数的数目。
[G] ARGIND 命令行中当前文件的位置（从0开始算）。
[N] ARGV 包含命令行参数的数组。 
[G] CONVFMT 数字转换格式（默认值为%.6g）。 
[P] ENVIRON 环境变量关联数组。 
[N] ERRNO 最后一个系统错误的描述。 
[G] FIELDWIDTHS 字段宽度列表（用空格键分隔）。 
[A] FILENAME 当前输入文件的名。 
[P] FNR 同NR，但相对于当前文件。
[A] FS 字段分隔符（默认是任何空格）。 
[G] IGNORECASE 如果为真，则进行忽略大小写的匹配。
[A] NF 表示字段数，在执行过程中对应于当前的字段数。 
[A] NR 表示记录数，在执行过程中对应于当前的行号。
[A] OFMT 数字的输出格式（默认值是%.6g）。 
[A] OFS 输出字段分隔符（默认值是一个空格）。 
[A] ORS 输出记录分隔符（默认值是一个换行符）。 
[A] RS 记录分隔符（默认是一个换行符）。
[N] RSTART 由match函数所匹配的字符串的第一个位置。 
[N] RLENGTH 由match函数所匹配的字符串的长度。 
[N] SUBSEP 数组下标分隔符（默认值是34）。

来自: http://man.linuxde.net/awk
示例：
  ● 1.txt   :  a|b|c
             awk 'BEGIN{ RS="|"; } { print $0 }'  1.txt
  ● seq 10 | awk 'ORS=NR%2?"-":"\n"' 


  ● awk 'BEGIN{ FS="----";OFS="*****" }{ print $1,$2,$3 }' filename
  ● awk 'BEGIN{OFS="!"}{NF=NF;print $0}' aa 神奇的用法

awk 'BEGIN {"date"|getline d; print d}'         通过管道把date的执行结果送给getline，并赋给变量d，然后打印
